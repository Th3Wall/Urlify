@page "/"
@using Urlify.Shared
@inject HttpClient Http
@inject ClipboardService ClipboardService

<div class="landing__wrp">
    <h1 class="landing__title stagger">Urlify.me</h1>
    <p class="landing__subtitle stagger">Most link shorteners do too much.<br/>This one just makes your links shorter.</p>
    <div class="landing__inputWrp stagger">
        <input @bind="Url" class="urlify-input landing__input" type="url" id="" name="shrinker" placeholder="Enter your link here" />
        <a @onclick="CreateUrl" class="urlify-btn " href="">Shorten</a>
    </div>
    <p class="toast"></p>

    @if (!String.IsNullOrEmpty(ShortUrl)) {
        <div class="landing__short">
            <p class="landing__short--link">@ShortUrl</p>
            <img class="landing__short--icon" src="./images/Copy_Icon.svg" alt="Copy Icon" @onclick="CopyToClipboard"/>
        </div>
    }
</div>

@code {
    private string Url { get; set; }

    private string ShortUrl { get; set; }

    private readonly IJSRuntime _jsRuntime;

    private async Task CreateUrl()
    {
        var urlify = new UrlifyLink();
        urlify.Url = Url;
        var result = await Http.PostAsJsonAsync<UrlifyLink>("Urlify", urlify);
        var urlShort = await result.Content.ReadFromJsonAsync<UrlifyLink>();
        ShortUrl = urlShort.ShortUrl;
    }

    private async Task CopyToClipboard()
    {
        try {
            await ClipboardService.WriteTextAsync(ShortUrl);
            await _jsRuntime.InvokeAsync<string>("displayToast");
        }
        catch {
            Console.WriteLine("Cannot write text to clipboard");
        }
    }
}


@* TODO: *@
@* - Toggle toast message ('.toast') *@
@* - Remove app loader that freezes GSAP animations *@
@* - Generate and add favicons set *@